objref ampasyn, ns, nc, vc

proc newparams() { localobj fil setting 
fil = new File() 
fil.ropen($s1) 
setting = fil.scanvar() 
nc.weight[0] = fil.scanvar() 
nc.delay = fil.scanvar() 
ampasyn.tau1 = fil.scanvar() 
ampasyn.tau2 = fil.scanvar() 
fil.close() } 



create soma 
insert pas
insert hh

access soma

L = 17.84
diam = 17.84


ampasyn = new Exp2Syn(0.5)
ampasyn.tau1 = 0.3
ampasyn.tau2 = 3

ns = new NetStim(0.5)
ns.start = 100
ns.interval = 100

nc = new NetCon(ns, ampasyn)
nc.weight = 0.01
nc.delay = 2.0

vc = new SEClamp(0.5)
vc.rs = 0.01
vc.dur1 = 500
vc.amp1= -70

tstop=500 
dt=0.05 
t=0


newparams("params.dat") 
print nc.weight
objref rect, recv 
rect = new Vector() 
recv = new Vector() 
// associate vectors to their targets 
rect.record(&t) // straight in the middle of the cell 
recv.record(&vc.i) // initialize the run 

finitialize(-70) // run the simulation 
while(t<tstop){ 
fadvance() 
} 
// export to file 
objref savdata 
savdata = new File() // will write in the .hoc place // Note: ...a far better way to resolve the filename: read it from params.dat 
savdata.wopen("output_Run0.dat") // use a matrix to speed up the write 
objref tempmatrix 
tempmatrix = new Matrix() 
tempmatrix.resize(recv.size(),2) 
tempmatrix.setcol(0, rect) 
tempmatrix.setcol(1, recv) // 0 as first argument: doesn't write the size of the matrix on the first line 
tempmatrix.fprint(0, savdata, " %g") // ...and we close the file, good guess 
savdata.close()
