{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin MulRunFitter[0]
{
load_file("mulfit.hoc", "MulRunFitter")
}
{
ocbox_ = new MulRunFitter(1)
}
{object_push(ocbox_)}
{
version(6)
ranfac = 2
fspec = new File("Rm_fitting3_soma-dend.ses.ft1")
fdat = new File("Rm_fitting3_soma-dend.ses.fd1")
read_data()
build()
}
opt.set_optimizer("MulfitPraxWrap")
{object_push(opt.optimizer)}
{
nstep = 0
}
{object_pop()}
{p.gengui(3, 1024, 213, 563.4, 522.9)}
{p.showargs(1842, 453, 258.3, 283.5)}
{optrestore(1770, 19, 305.1, 316.8)}
{object_pop()}
{
ocbox_.map("MulRunFitter[0]", 1796, 847, 357.3, 244.8)
}
objref ocbox_
//End MulRunFitter[0]

{
xpanel("RunControl", 0)
v_init = 0
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 2909.92
xvalue("t","t", 2 )
tstop = 2800
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 46.63
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.14
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(492,630)
}
{
xpanel("test", 0)
xlabel("*****************NOTE********************")
xlabel("If you want to set a new Rm distribution,")
xlabel("close the previously opened panel and")
xlabel("open a new one!")
xlabel("********************************************")
xmenu("set Rm", 0)
xbutton("constant Rm","setConstantRm()")
xbutton("+ linear Rm","setLinearIncRm()")
xbutton("- linear Rm","setLinearDecRm()")
xbutton("+ sigmoid Rm","setSigmoidIncRm()")
xbutton("- sigmoid Rm","setSigmoidDecRm()")
xmenu()
xlabel("Setting the d_lambda parameter")
d_lambda = 0.1
xvalue("d_lambda","d_lambda", 1,"set_nseg()", 0, 0 )
xbutton("reset nseg to 1","reset_nseg()")
xbutton("validate","segmentValidation()")
xbutton("save Rm data","save_data()")
xbutton("Adding Spines","addAndVisualizeSpineLoc()")
xlabel("Current clamp protocols")
xbutton("IC3_passive - soma","IC3_passive()")
xbutton("IC3_passive - apic at 100 um","IC3_passive_dend_100um()")
xbutton("IC3_passive - apic at 200 um","IC3_passive_dend_200um()")
xbutton("IC3_passive - nexus at 331 um","IC3_passive_nexus()")
xbutton("IC5_zap","IC5_zap()")
xlabel("Attenuation measurements on the apical&oblique dendrites")
xbutton("CF Attenuation","voltAttCentrifugal_apicalOblique()")
xbutton("CP Attenuation","voltAttCentripetal_apicalOblique()")
xlabel("Attenuation measurements on the basal dendrites")
xbutton("CF Attenuation","voltAttCentrifugal_basal()")
xbutton("CP Attenuation","voltAttCentripetal_basal()")
xlabel("Soma-dendritic & dendro-somatic recording")
xbutton("Dual recording","soma_dend_IC3()")
xpanel(25,262)
}
objectvar scene_vector_[1]
{doNotify()}
