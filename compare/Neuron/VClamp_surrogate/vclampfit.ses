{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin MulRunFitter[0]
{
load_file("mulfit.hoc", "MulRunFitter")
}
{
ocbox_ = new MulRunFitter(1)
}
{object_push(ocbox_)}
{
version(6)
ranfac = 2
fspec = new File("vclampfit.ses.ft1")
fdat = new File("vclampfit.ses.fd1")
read_data()
build()
}
opt.set_optimizer("MulfitPraxWrap")
{object_push(opt.optimizer)}
{
nstep = 0
}
{object_pop()}
{p.gengui(0, 385, 531, 369.6, 318.72)}
{p.showargs(3, 766, 261.12, 161.28)}
{p.showdomain(281, 766, 295.68, 192)}
{object_pop()}
{
ocbox_.map("MulRunFitter[0]", 3, 531, 360.96, 199.68)
}
objref ocbox_
//End MulRunFitter[0]

{
xpanel("RunControl", 0)
v_init = -70
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 500.1
xvalue("t","t", 2 )
tstop = 500
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.16
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(3,131)
}
{
save_window_ = new Graph(0)
save_window_.size(0,500,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 500, 120, 291, 131, 804.48, 330.88)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,500,-1,1)
scene_vector_[3] = save_window_
{save_window_.view(0, -1, 500, 2, 410, 24, 804.48, 282.88)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("vc.i", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
