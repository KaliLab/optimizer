//Neuron files

//nrn_load_dll("./mods/nrnmech.dll")
load_file("subiter.hoc")
//load_file("nrngui.hoc")
load_file("stdrun.hoc")

//Custom files

load_file("morphology.hoc")
load_file("biophys_na_inhomo_minimal_model_full_soma_active_spine.hoc")
//load_file("gui_shah_km.hoc")
load_file("we_want_spines_fully_active.hoc")

//add_F_factor_to_all_dendrites()

//objref spine_dendrites, spine_count
/*spine_dendrites = new Vector(3)
spine_dendrites.x[0] = 54
spine_dendrites.x[1] = 74
spine_dendrites.x[2] = 80

*/
//spine_dendrites = new Vector(158)

//for i = 0, 157 {
	
//	spine_dendrites.x[i] = i
	//print spine_dendrites.x[i]
//}

//spine_count = new Vector(158)

/*
all_spines=0

for i=0, spine_dendrites.size()-1 {
	
	access dendrite[spine_dendrites.x[i]]
	length=dendrite[spine_dendrites.x[i]].L
	dist_spines = 1/spine_density(spine_dendrites.x[i])
	cre_spines=int(length/dist_spines)
	spine_count.x[i] = cre_spines
	all_spines=all_spines+cre_spines+1
}
*/
//create_spines(0)
/*
for i=0, spine_dendrites.size()-1 {
	
	print spine_dendrites.x[i]

	
	access dendrite[spine_dendrites.x[i]]
	length=dendrite[spine_dendrites.x[i]].L
	
	
	//cre_spines =30  //ha tudjuk mennyi spinet akarunk
	//loc_first_spine=0.01 //hova akarjuk az elso spinet
	//fix_number_spines(spine_dendrites.x[i], 0.5, 10)
	full_covered_with_spines(spine_dendrites.x[i])
   
}
*/
//print "uuuuuuu"
//print dendrite[80].gmax_Leak_pyr

//fix_number_spines(80, 0.5, 0)


//spicount=int(spine_count.x[2]/2)

//load_file("simplest_synapse_no_record.hoc")
//shead[18531] just_one_syn()
//shead[0] subcell_cascade()
//shead[0] just_one_syn()
//dendrite[80] just_one_syn()
/*
//Recordings
strdef section_name1, section_name2, section_name3, section_name4, section_name5, protocol_name, data, filename1, filename2, filename3, filename4, filename5

data= ".dat"
protocol_name = "synapse_one_spine_10_Hz"

section_name1 = "soma_"
section_name2 = "dend80_"
section_name3 = "shead_voltage_"
section_name4 = "shead_cai_"
section_name5 = "shead_camkii_"

sprint(filename1, "%s%s%s", section_name1, protocol_name, data)
sprint(filename2, "%s%s%s", section_name2, protocol_name, data)
sprint(filename3, "%s%s%s", section_name3, protocol_name, data)
sprint(filename4, "%s%s%s", section_name4, protocol_name, data)
sprint(filename5, "%s%s%s", section_name5, protocol_name, data)

xpanel("Record")
xbutton("Record simulation and save data", "recordings(filename1, filename2, filename3, filename4,filename5)")
doEvents()
xpanel(0,0)
*/
