<?xml version="1.0" ?>
<settings>
  <simulator>Neuron</simulator>
  <f_tol>None</f_tol>
  <max_evaluation>100.0</max_evaluation>
  <spike_window>20.0</spike_window>
  <evo_strat>Classical EO</evo_strat>
  <seed>1234.0</seed>
  <m_gauss>None</m_gauss>
  <run_controll_vrest>-70.0</run_controll_vrest>
  <starting_points>None</starting_points>
  <cooling_rate>None</cooling_rate>
  <pop_size>100.0</pop_size>
  <adjusted_params>['weight', 'delay', 'tau_rise', 'tau_decay']</adjusted_params>
  <param_vals>[0.1, 0.1, 0.1, 0.1]</param_vals>
  <run_controll_tstop>500.0</run_controll_tstop>
  <num_inputs>4</num_inputs>
  <stim_sec>soma</stim_sec>
  <spike_thres>0.0</spike_thres>
  <boundaries>[[0.0001, 0.0, 0.001, 0.1], [1.0, 1.0, 1.0, 5.0]]</boundaries>
  <stim_pos>0.5</stim_pos>
  <dwell>None</dwell>
  <input_size>1</input_size>
  <type>['current']</type>
  <x_tol>None</x_tol>
  <feats>PPTD</feats>
  <input_length>500</input_length>
  <sim_command>&quot;&quot;</sim_command>
  <init_temp>None</init_temp>
  <schedule>None</schedule>
  <stim_dur>1.0</stim_dur>
  <run_controll_dt>0.05</run_controll_dt>
  <run_controll_sec>soma</run_controll_sec>
  <input_cont_t>True</input_cont_t>
  <start_time_stamp>1381927818.45</start_time_stamp>
  <model_spec_dir>/home/fripe/workspace/git/optimizer/tests/VClamp_surrogate</model_spec_dir>
  <acc>None</acc>
  <std_gauss>None</std_gauss>
  <run_controll_record>i</run_controll_record>
  <stim_type>VClamp</stim_type>
  <stim_del>1.0</stim_del>
  <stim_amp>[-70.0]</stim_amp>
  <input_dir>/home/fripe/workspace/git/optimizer/tests/VClamp_surrogate/iclamp.dat</input_dir>
  <input_freq>20000</input_freq>
  <input_scale>nA</input_scale>
  <u_fun_string>#Please define your function below in the template!
#You may choose an arbitrary name for your function,
#but the input parameters must be self and a vector!In the first line of the function specify the length of the vector in a comment!
#In the second line you may specify the names of the parameters in a comment, separated by spaces.
def usr_fun(self,v):
#4
#weight
#delay
#tau_rise
#tau_decay
    h.nc.weight[0] = v[0]
    h.nc.delay = v[1]
    h.ampasyn.tau1 = v[2]
    h.ampasyn.tau2 = v[3]
</u_fun_string>
  <mutation_rate>0.25</mutation_rate>
  <weights>[1.0]</weights>
  <model_path>/home/fripe/workspace/git/optimizer/tests/VClamp_surrogate/simple_hh_syn_vclamp_toopt.hoc</model_path>
  <final_temp>None</final_temp>
  <run_controll_pos>0.5</run_controll_pos>
  <base_dir>/home/fripe/workspace/git/optimizer/tests/VClamp_surrogate/example results</base_dir>
</settings>
