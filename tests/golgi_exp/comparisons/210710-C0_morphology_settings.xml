<?xml version="1.0" ?>
<settings>
  <simulator>Neuron</simulator>
  <f_tol>None</f_tol>
  <max_evaluation>20.0</max_evaluation>
  <spike_window>1000.0</spike_window>
  <evo_strat>Classical EO</evo_strat>
  <seed>1234.0</seed>
  <m_gauss>None</m_gauss>
  <run_controll_vrest>0.0</run_controll_vrest>
  <starting_points>None</starting_points>
  <cooling_rate>None</cooling_rate>
  <pop_size>20.0</pop_size>
  <adjusted_params>['cm', 'Ra', 'g_pas']</adjusted_params>
  <param_vals>[0.1, 0.1, 0.1]</param_vals>
  <run_controll_tstop>1200.0</run_controll_tstop>
  <num_inputs>3</num_inputs>
  <stim_sec>soma</stim_sec>
  <spike_thres>0.0</spike_thres>
  <boundaries>[[1.0, 100.0, 1e-06], [10.0, 700.0, 0.01]]</boundaries>
  <stim_pos>0.5</stim_pos>
  <dwell>None</dwell>
  <input_size>1</input_size>
  <type>['voltage', 'voltage']</type>
  <x_tol>None</x_tol>
  <feats>PPTD</feats>
  <input_length>1200</input_length>
  <sim_command>&quot;&quot;</sim_command>
  <init_temp>None</init_temp>
  <schedule>None</schedule>
  <stim_dur>1000000000.0</stim_dur>
  <run_controll_dt>0.05</run_controll_dt>
  <run_controll_sec>soma</run_controll_sec>
  <input_cont_t>True</input_cont_t>
  <start_time_stamp>1380541617.41</start_time_stamp>
  <model_spec_dir>/home/fripe/workspace/git/optimizer/tests/golgi_exp</model_spec_dir>
  <acc>None</acc>
  <std_gauss>None</std_gauss>
  <run_controll_record>v</run_controll_record>
  <stim_type>IClamp</stim_type>
  <stim_del>0.0</stim_del>
  <stim_amp>[u'/home/fripe/workspace/git/optimizer/tests/golgi_exp/stimuli.dat']</stim_amp>
  <input_dir>/home/fripe/workspace/git/optimizer/tests/golgi_exp/210710-C0_exp.dat</input_dir>
  <input_freq>20000</input_freq>
  <input_scale>mV</input_scale>
  <u_fun_string>#Please define your function below in the template!
#You may choose an arbitrary name for your function,
#but the input parameters must be self and a vector!In the first line of the function specify the length of the vector in a comment!
#In the second line you may specify the names of the parameters in a comment, separated by spaces.
def usr_fun(self,v):
#3
#cm
#Ra
#g_pas
	for sec in h.allsec():
		sec.cm=v[0]
		sec.Ra=v[1]
		for seg in sec:
			seg.g_pas=v[2]
			seg.e_pas=0
</u_fun_string>
  <mutation_rate>0.25</mutation_rate>
  <weights>[1.0]</weights>
  <model_path>/home/fripe/workspace/git/optimizer/tests/golgi_exp/210710-C0_morphology.hoc</model_path>
  <final_temp>None</final_temp>
  <run_controll_pos>0.5</run_controll_pos>
  <base_dir>/home/fripe/workspace/git/optimizer/tests/golgi_exp/comparisons</base_dir>
</settings>
